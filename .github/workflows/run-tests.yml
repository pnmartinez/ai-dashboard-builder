# .github/workflows/run-tests.yml
name: Run Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock
        pip install -e .

    - name: Run tests and create JUnit report
      run: |
        pytest src/ai_dashboard_builder/tests/ -v --junitxml=results.xml

    - name: Check test pass ratio
      run: python -c 'import xml.etree.ElementTree as ET; import sys; tree = ET.parse("results.xml"); root = tree.getroot(); tests = int(root.get("tests", 0)); failures = int(root.get("failures", 0)); errors = int(root.get("errors", 0)); skips = int(root.get("skipped", 0)); passed = tests - failures - errors - skips; ratio = (passed / tests * 100) if tests else 0; print(f"Pass Ratio: {ratio:.2f}%"); sys.exit(1 if ratio < 70 else 0)'


    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const xml = fs.readFileSync('results.xml', 'utf8');
          const matchTests = xml.match(/tests="(\d+)"/);
          const matchFailures = xml.match(/failures="(\d+)"/);
          const matchErrors = xml.match(/errors="(\d+)"/);
          const matchSkips = xml.match(/skipped="(\d+)"/) || ["", "0"];

          const tests = parseInt(matchTests[1], 10);
          const failures = parseInt(matchFailures[1], 10);
          const errors = parseInt(matchErrors[1], 10);
          const skips = parseInt(matchSkips[1], 10);
          const passed = tests - failures - errors - skips;

          const ratio = tests > 0 ? (passed / tests) * 100 : 0;

          const comment = `## Test Re
