# .github/workflows/run-tests.yml
name: Run Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-mock
        pip install -e .

    - name: Run tests with coverage
      env:
        OPENAI_API_KEY: dummy_key
        ANTHROPIC_API_KEY: dummy_key
        GROQ_API_KEY: dummy_key
      run: |
        pytest src/ai_dashboard_builder/tests/ -v --cov=ai_dashboard_builder --cov-report=xml

    - name: Check test coverage threshold
      run: |
        COVERAGE=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); print(float(root.attrib['line-rate']) * 100)")
        if (( $(echo "$COVERAGE < 70" | bc -l) )); then
          echo "Test coverage ($COVERAGE%) is below threshold (70%)"
          exit 1
        fi

    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const testResults = fs.readFileSync('coverage.xml', 'utf8');
          const coverage = parseFloat(testResults.match(/line-rate="([^"]+)"/)[1]) * 100;
          
          const comment = `## Test Results 🧪
          
          - Coverage: ${coverage.toFixed(2)}%
          - Python Version: ${{ matrix.python-version }}
          
          ${coverage < 70 ? '⚠️ Coverage is below 70% threshold!' : '✅ Coverage meets requirements'}
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.name,
            body: comment
          });
